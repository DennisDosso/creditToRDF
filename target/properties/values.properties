
# ----------------

# posc
indexes.string=spoc,posc,cosp

# ----------------

#possible values: UNIFORM, MIXED
query.plan=MIXED

# in case of UNIFORM query plan, each class represents an epoch, represented by how_many_queries
printing.plan=ONE,TWO,FIVE,SIX,SEVEN,EIGHT,TEN
#printing.plan=ONE,TWO,FIVE,SIX,SEVENB,EIGHTB,TENB

how_many_queries=200

standard.deviation.ratio=6

# ----------------

# possible values: NONE, TIME, FUNCTION
cool.down.strategy=NONE


# ----------------

# possible values: CONSTANT, ADAPTIVE
threshold.strategy=CONSTANT

# if the threshold strategy is set to CONSTANT, this is the constant 
credit.threshold = 0

# ----------------

# name of the named graph that we are using. Connected to the query class
named.graph=http://namedgraph/

# ----------------


are.we.distributing.credit=true

are.we.interrogating.the.whole.triplestore=true

are.we.interrogating.the.cache=true

are.we.interrogating.the.whole.named.triplestore=false


# ----------------

# set this to true if it is necessary to check that the triples returned from the CONSTRUCT are really there
construct.check=true

# ----------------

# number of epochs used in the TIME-aware strategy, strategies used: 2, 5, 10
how.many.epochs=5

# ----------------

# query class that we are using. Available classes: 1, 5, 7, 8, 10
class =DGNQUERY12

# ----------------


# the number of queries that make up an epoch
epoch.length=25

year.length=100

# ----------------



# ----------------

query.number.credit=10000

query.number.hit=1000

# ----------------



# ----------------




execute.a.query.this.many.times=20


# ------------------


# ------------------

# when we print queries, we may choose to create them divided in sets, or put them all together in one single set
print.uniform.sets.of.queries=true

# -----------------


max_times_per_one_query = 300

are.we.doing.the.warmup=false

are.we.interrogating.the.reduced.triplestore=true

# ----------------





